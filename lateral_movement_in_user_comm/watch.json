{
    "metadata": {
      "window_width": "30m",
      "time_period": "30s"
    },
    "trigger": {
      "schedule": {
        "interval": "30s"
      }
    },
    "input": {
      "chain": {
        "inputs": [
          {
            "get_time_period": {
              "search": {
                "request": {
                  "indices": [
                    "log"
                  ],
                  "body": {
                    "size": 1,
                    "script_fields": {
                      "upper_time": {
                        "script": {
                          "inline": "date = new Date(); date.setMinutes(date.getMinutes()+30); date.format('HH:mm:ssZ');",
                          "lang": "groovy"
                        }
                      },
                      "lower_time": {
                        "script": {
                          "inline": "date = new Date(); date.setMinutes(date.getMinutes()-30); date.format('HH:mm:ssZ');",
                          "lang": "groovy"
                        }
                      }
                    }
                  }
                }
              }
            },
            "user_server_logons": {
              "search": {
                "request": {
                  "indices": [
                    "log"
                  ],
                  "body": {
                    "query": {
                      "range": {
                        "@timestamp": {
                          "gte": "now-{{ctx.metadata.time_period}}"
                        }
                      }
                    },
                    "aggs": {
                      "user_server": {
                        "terms": {
                          "field": "user_server",
                          "size": 1000
                        }
                      }
                    },
                    "size": 0
                  }
                }
              }
            },
            "new_user_server_logons": {
              "search": {
                "request": {
                  "indices": [
                    "log"
                  ],
                  "body": {
                    "query": {
                      "bool": {
                        "filter": [
                          {
                            "range": {
                              "time": {
                                "gte": "{{ctx.payload.get_time_period.hits.hits.0.fields.lower_time.0}}",
                                "lte": "{{ctx.payload.get_time_period.hits.hits.0.fields.upper_time.0}}"
                              }
                            }
                          },
                          {
                            "terms": {
                              "user_server": [
                                "{{#ctx.payload.user_server_logons.aggregations.user_server.buckets}}{{key}}",
                                "{{/ctx.payload.user_server_logons.aggregations.user_server.buckets}}"
                              ]
                            }
                          },
                          {
                            "range": {
                              "@timestamp": {
                                "lt": "now/d"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "aggs": {
                      "user_server": {
                        "terms": {
                          "field": "user_server",
                          "size": 1
                        }
                      }
                    },
                    "size": 0
                  }
                }
              }
            }
          }
        ]
      }
    },
    "condition": {
      "script": {
        "inline":"return ctx.payload.user_server_logons.aggregations.user_server.buckets.size() != ctx.payload.new_user_server_logons.aggregations.user_server.buckets.size();",
        "lang" : "groovy"
      }
    },
    "transform": {
      "script": {
        "inline":"new_starts = ctx.payload.user_server_logons.aggregations.user_server.buckets.collect({it.key}) - ctx.payload.new_user_server_logons.aggregations.user_server.buckets.collect({it.key}); response=[:]; response['new_starts']=new_starts.collect({it.replace('_',' on server ')}); response['lower_time']=ctx.payload.get_time_period.hits.hits[0].fields.lower_time[0]; response['upper_time']=ctx.payload.get_time_period.hits.hits[0].fields.upper_time[0];  return response",
        "lang": "groovy"
      }
    },
    "actions": {
      "log": {
        "logging": {
          "text": "The following users have logged onto a new server for the first time within the time period: {{#ctx.payload.new_starts}}{{.}}:{{/ctx.payload.new_starts}}"
        }
      }
    }
  }